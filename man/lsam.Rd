% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/latent_factor.R
\name{lsam}
\alias{lsam}
\title{Perform alternating minimization for a latent source model}
\usage{
lsam(Y, time_mask, Phi0, n_iter = 10, model_funs = NULL)
}
\arguments{
\item{Y}{An N x J real matrix, with censored values set to NA. The standard
application we have in mind is the sample x OTU count matrix.}

\item{time_mask}{An N x T matrix, where T is the unique number of time points
across all samples, where the it^th entry is 1 is sample i was taken at time
i.}

\item{Phi0}{The initial value of Phi, the basis matrix.}

\item{n_iter}{The number of iterations to run the alternating minimization.}

\item{model_funs}{A list of functions that, when given a matrix x and vector
y, will return the coefficients of x on y. Must have two elemets "Phi" and
"W" for fitting the two parts of the alternating minimization.}
}
\value{
A list with the following elements, \cr
  $Phi The learned basis matrix across times. \cr
  $W The learned coefficients matrix. \cr
  $obj The RSS, and l1 / l2 of W across iterations.
}
\description{
This is minimizing ||Y - Phi * W^T||_{2}^{2} + lambda * ||W||_{1}
over W and Phi, by alternatively minimizing over each term. Note that Phi
is fixed across people for each time, which is why it is a shorter dimension
than Y. I.e., this model can also be written as
y_{ijt} = phi_{t} ^ T w_{j} + noise.
}

